
# ADJECTIVES #STEP 2

[T:WORD-CLASS:noun T:CASE:accusative] [T:WORD-CLASS:verb] S:MIXED:Obj(1:word,2:word) => +T:EXPERIENTIAL:Goal(1:groups,2:clause)
[T:WORD-CLASS:noun T:CASE:accusative] [T:WORD-CLASS:verb] S:MIXED:Amod(1:word,2:word) => +T:EXPERIENTIAL:Goal(1:groups,2:clause)
[T:WORD-CLASS:noun] [T:WORD-CLASS:verb] S:MIXED:Nsubj(1:word,2:word) => +T:EXPERIENTIAL:Actor(1:groups,2:clause)
[T:WORD-CLASS:noun] [T:WORD-CLASS:verb] S:MIXED:Nsubj-Pass(1:word,2:word) => +T:EXPERIENTIAL:Goal(1:groups,2:clause)
[T:WORD-CLASS:number T:NUMERIC-CASE:ordinal T:CASE-SEAM:accusative-seam] [T:WORD-CLASS:verb] S:MIXED:Obj(1:word,2:word) => +T:EXPERIENTIAL:Goal(1:groups,2:clause)

[T:WORD-CLASS:number T:NUMERIC-CASE:cardinal] [T:WORD-CLASS:verb] S:MIXED:Nsubj(1:word,2:word) => +T:EXPERIENTIAL:Actor(1:groups,2:clause)
[T:WORD-CLASS:number T:NUMERIC-CASE:cardinal] [T:WORD-CLASS:verb] S:MIXED:Nsubj-Pass(1:word,2:word) => +T:EXPERIENTIAL:Actor(1:groups,2:clause)
[T:WORD-CLASS:number T:NUMERIC-CASE:cardinal] [T:WORD-CLASS:verb] S:MIXED:Obj(1:word,2:word) => +T:EXPERIENTIAL:Goal(1:groups,2:clause)

# ADJECTIVES STEP 4

# (Cop) (Head)
[] [] S:MIXED:Cop(1:word,2:word) => +T:EXPERIENTIAL:Attribute(2:groups,1:clause)
[] [T:WORD-CLASS:verb] S:MIXED:Cop(1:word,2:word) => -T:EXPERIENTIAL:Attribute(2:groups,1:clause)

# (Cop) (Head) (Nsubj) => (Head) (Attribute) (Carrier)
[] [] [] S:MIXED:Cop(1:word,2:word) T:EXPERIENTIAL:Attribute(2:groups,1:clause) S:MIXED:Nsubj(3:word,2:word) => +T:EXPERIENTIAL:Carrier(3:groups,1:clause)
[] [] [T:WORD-CLASS:noun] S:MIXED:Cop(1:word,2:word) T:EXPERIENTIAL:Attribute(2:groups,1:clause) S:MIXED:Csubj(3:word,2:word) => +T:EXPERIENTIAL:Carrier(3:groups,1:clause)

# (XComp) (Head)
[] [] S:MIXED:XComp(1:word,2:word) => +T:EXPERIENTIAL:Attribute(1:groups,2:clause)
[T:WORD-CLASS:verb] [] S:MIXED:XComp(1:word,2:word) => -T:EXPERIENTIAL:Attribute(1:groups,2:clause)

# (XComp) (Head) (Nsubj-Pass) => (Attribute) (Head) (Carrier)
[] [] [] S:MIXED:XComp(1:word,2:word) T:EXPERIENTIAL:Attribute(1:groups,2:clause) S:MIXED:Nsubj-Pass(3:word,2:word) => +T:EXPERIENTIAL:Carrier(3:groups,2:clause)
[] [] [T:WORD-CLASS:noun] S:MIXED:XComp(1:word,2:word) T:EXPERIENTIAL:Attribute(1:groups,2:clause) S:MIXED:Csubj-Pass(3:word,2:word) => +T:EXPERIENTIAL:Carrier(3:groups,2:clause)

# (XComp) (Head) (Obj) => (Attribute) (Head) (Carrier)
[] [] [] S:MIXED:XComp(1:word,2:word) T:EXPERIENTIAL:Attribute(1:groups,2:clause) S:MIXED:Obj(3:word,2:word) => +T:EXPERIENTIAL:Carrier(3:groups,2:clause)
[] [] [T:WORD-CLASS:noun] S:MIXED:XComp(1:word,2:word) T:EXPERIENTIAL:Attribute(1:groups,2:clause) S:MIXED:Cobj(3:word,2:word) => +T:EXPERIENTIAL:Carrier(3:groups,2:clause)

# (XComp) (Head) (Obj) => (Attribute) (Head) (Attributor)
[] [] [] S:MIXED:XComp(1:word,2:word) T:EXPERIENTIAL:Attribute(1:groups,2:clause) S:MIXED:Subj(3:word,2:word) => +T:EXPERIENTIAL:Carrier(3:groups,2:clause)
[] [] [T:WORD-CLASS:noun] S:MIXED:XComp(1:word,2:word) T:EXPERIENTIAL:Attribute(1:groups,2:clause) S:MIXED:Csubj(3:word,2:word) => +T:EXPERIENTIAL:Carrier(3:groups,2:clause)

[T:WORD-CLASS:verb S:VERBFORM:part] [#sum] S:MIXED:Cop(2:word,1:word) => +T:EXPERIENTIAL:Attribute(1:groups,2:clause)

# VERBS STEP 5

[T:WORD-CLASS:verb S:VERBFORM:part] [T:WORD-CLASS:verb] S:MIXED:Csubj(1:word,2:word) => +T:EXPERIENTIAL:Actor(1:clauses,2:group)
#[T:WORD-CLASS:noun] [T:WORD-CLASS:noun] [] S:MIXED:Csubj(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Actor(3:clauses,2:group)
#[T:WORD-CLASS:adjective] [T:WORD-CLASS:noun] [] S:MIXED:Csubj(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Actor(3:clauses,2:group)
#[T:WORD-CLASS:adverb] [T:WORD-CLASS:noun] [] S:MIXED:Csubj(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Actor(3:clauses,2:group)
#[T:WORD-CLASS:adposition] [T:WORD-CLASS:noun] [] S:MIXED:Csubj(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Actor(3:clauses,2:group)

[T:WORD-CLASS:verb S:VERBFORM:part] [T:WORD-CLASS:verb] S:MIXED:Cobj(1:word,2:word) => +T:EXPERIENTIAL:Goal(1:clauses,2:group)
#[T:WORD-CLASS:noun] [T:WORD-CLASS:noun] [] S:MIXED:Cobj(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Goal(3:clauses,2:group)
#[T:WORD-CLASS:adjective] [T:WORD-CLASS:noun] [] S:MIXED:Cobj(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Goal(3:clauses,2:group)
#[T:WORD-CLASS:adverb] [T:WORD-CLASS:noun] [] S:MIXED:Cobj(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Goal(3:clauses,2:group)
#[T:WORD-CLASS:adposition] [T:WORD-CLASS:noun] [] S:MIXED:Cobj(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Goal(3:clauses,2:group)

[T:WORD-CLASS:verb S:VERBFORM:part] [T:WORD-CLASS:verb] S:MIXED:Csubj-Pass(1:word,2:word) => +T:EXPERIENTIAL:Goal(1:clauses,2:group)
#[T:WORD-CLASS:noun] [T:WORD-CLASS:noun] [] S:MIXED:Csubj-Pass(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Goal(3:clauses,2:group)
#[T:WORD-CLASS:adjective] [T:WORD-CLASS:noun] [] S:MIXED:Csubj-Pass(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Goal(3:clauses,2:group)
#[T:WORD-CLASS:adverb] [T:WORD-CLASS:noun] [] S:MIXED:Csubj-Pass(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Goal(3:clauses,2:group)
#[T:WORD-CLASS:adposition] [T:WORD-CLASS:noun] [] S:MIXED:Csubj-Pass(1:word,2:word) S:MIXED:Cop(3:word,1:word) => +T:EXPERIENTIAL:Goal(3:clauses,2:group)

# FIX PARTICIPANT ATTACHMENT

[] [] [] T:EXPERIENTIAL:Actor(1:groups,2:clause) T:LOGICAL:Auxiliary(2:groups,3:group) => -T:EXPERIENTIAL:Actor(1:groups,2:clause) +T:EXPERIENTIAL:Actor(1:groups,3:clause)
[] [] [] T:EXPERIENTIAL:Actor(1:groups,2:clause) T:LOGICAL:Auxiliary2(2:groups,3:group) => -T:EXPERIENTIAL:Actor(1:groups,2:clause) +T:EXPERIENTIAL:Actor(1:groups,3:clause)
[] [] [] T:EXPERIENTIAL:Goal(1:groups,2:clause) T:LOGICAL:Auxiliary(2:groups,3:group) => -T:EXPERIENTIAL:Goal(1:groups,2:clause) +T:EXPERIENTIAL:Goal(1:groups,3:clause)
[] [] [] T:EXPERIENTIAL:Goal(1:groups,2:clause) T:LOGICAL:Auxiliary2(2:groups,3:group) => -T:EXPERIENTIAL:Goal(1:groups,2:clause) +T:EXPERIENTIAL:Goal(1:groups,3:clause)
[] [] [] T:EXPERIENTIAL:Attributor(1:groups,2:clause) T:LOGICAL:Auxiliary(2:groups,3:group) => -T:EXPERIENTIAL:Attributor(1:groups,2:clause) +T:EXPERIENTIAL:Attributor(1:groups,3:clause)
[] [] [] T:EXPERIENTIAL:Attributor(1:groups,2:clause) T:LOGICAL:Auxiliary2(2:groups,3:group) => -T:EXPERIENTIAL:Attributor(1:groups,2:clause) +T:EXPERIENTIAL:Attributor(1:groups,3:clause)
[] [] [] T:EXPERIENTIAL:Carrier(1:groups,2:clause) T:LOGICAL:Auxiliary(2:groups,3:group) => -T:EXPERIENTIAL:Carrier(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,3:clause)
[] [] [] T:EXPERIENTIAL:Carrier(1:groups,2:clause) T:LOGICAL:Auxiliary2(2:groups,3:group) => -T:EXPERIENTIAL:Carrier(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,3:clause)

[] [#sum] [] T:EXPERIENTIAL:Actor(1:groups,2:clause) T:EXPERIENTIAL:Attribute(3:groups,2:clause) => -T:EXPERIENTIAL:Actor(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,2:clause)
[] [#sum] [] T:EXPERIENTIAL:Goal(1:groups,2:clause) T:EXPERIENTIAL:Attribute(3:groups,2:clause) => -T:EXPERIENTIAL:Goal(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,2:clause)
[] [S:VOICE:pass] [] T:EXPERIENTIAL:Actor(1:groups,2:clause) T:EXPERIENTIAL:Attribute(3:groups,2:clause) => -T:EXPERIENTIAL:Actor(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,2:clause)
[] [S:VOICE:pass] [] T:EXPERIENTIAL:Goal(1:groups,2:clause) T:EXPERIENTIAL:Attribute(3:groups,2:clause) => -T:EXPERIENTIAL:Goal(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,2:clause)
[T:CASE:accusative] [S:VOICE:act] [] T:EXPERIENTIAL:Actor(1:groups,2:clause) T:EXPERIENTIAL:Attribute(3:groups,2:clause) => -T:EXPERIENTIAL:Actor(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,2:clause)
[T:CASE:accusative] [S:VOICE:act] [] T:EXPERIENTIAL:Goal(1:groups,2:clause) T:EXPERIENTIAL:Attribute(3:groups,2:clause) => -T:EXPERIENTIAL:Goal(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,2:clause)
[] [] [] T:EXPERIENTIAL:Actor(1:groups,2:clause) T:EXPERIENTIAL:Attribute(3:groups,2:clause) => -T:EXPERIENTIAL:Actor(1:groups,2:clause) +T:EXPERIENTIAL:Attributor(1:groups,2:clause)
[] [] [] T:EXPERIENTIAL:Goal(1:groups,2:clause) T:EXPERIENTIAL:Attribute(3:groups,2:clause) => -T:EXPERIENTIAL:Goal(1:groups,2:clause) +T:EXPERIENTIAL:Attributor(1:groups,2:clause)

[T:WORD-CLASS:noun T:CASE:nominative] [T:WORD-CLASS:verb S:VOICE:pass #affirmo] T:EXPERIENTIAL:Actor(1:groups,2:clause) => -T:EXPERIENTIAL:Actor(1:groups,2:clause) +T:EXPERIENTIAL:Goal(1:groups,2:clause)
[T:WORD-CLASS:noun T:CASE:nominative] [T:WORD-CLASS:verb S:VOICE:pass #nego] T:EXPERIENTIAL:Actor(1:groups,2:clause) => -T:EXPERIENTIAL:Actor(1:groups,2:clause) +T:EXPERIENTIAL:Goal(1:groups,2:clause)

# FIX PARTICIPANT CASE ATTACHMENT

[] [T:WORD-CLASS:adjective] [] S:MIXED:Case(1:word,2:word) T:EXPERIENTIAL:Attribute(2:groups,3:clause) => +T:LOGICAL:Marker(1:groups,3:group)

[T:WORD-CLASS:noun] [T:WORD-CLASS:verb #significo] T:EXPERIENTIAL:Attributor(1:groups,2:clause) => -T:EXPERIENTIAL:Attributor(1:groups,2:clause) +T:EXPERIENTIAL:Carrier(1:groups,2:clause)

## Participants with auxiliary verb #sum
[S:CASE:gen] [S:VERBFORM:inf] [#sum] S:MIXED:Csubj(2:word,1:word) S:MIXED:Cop(3:word,1:word) => -T:EXPERIENTIAL:Attribute(1:groups,3:clause) +T:EXPERIENTIAL:Actor(1:groups,2:clause)
[S:CASE:gen] [S:VERBFORM:inf] [#sum] [] S:MIXED:Csubj(2:word,1:word) S:MIXED:Cop(3:word,1:word) S:MIXED:Csubj(1:word,4:word) => -T:EXPERIENTIAL:Attribute(1:groups,2:clause) +T:EXPERIENTIAL:Goal(2:groups,4:clause)
[T:WORD-CLASS:verb S:VERBFORM:part] [#sum] S:MIXED:Cop(2:word,1:word) => -T:EXPERIENTIAL:Attribute(1:groups,2:clause)

## Participants in elliptic clauses

# Actor
[T:conjunction] [T:noun T:nominative] [T:verb] [T:noun T:nominative] S:Mark(1,2) S:Advcl(2,3) T:Actor(4,3) => +T:EXPERIENTIAL:Actor(2:groups,1:clause) +T:LOGICAL:Extending(1:clauses,3:clause-complex)
[T:conjunction] [T:noun T:nominative] [T:verb #pono] [T:noun T:nominative #ego] S:Mark(1,2) S:Advcl(2,3) T:Actor(4,3) => -T:EXPERIENTIAL:Actor(2:groups,1:clause) -T:LOGICAL:Extending(1:clauses,3:clause-complex)
[T:conjunction] [T:noun T:nominative] [T:verb #pono T:ō-seam] S:Mark(1,2) S:Advcl(2,3) => +T:EXPERIENTIAL:Actor(2:groups,1:clause) +T:LOGICAL:Extending(1:clauses,3:clause-complex) 
